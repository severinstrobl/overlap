name: SonarCloud

on:
  workflow_call:

jobs:
  analyze:
    name: Build and analyze
    runs-on: ubuntu-24.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
          fetch-depth: 0

      - name: Dependencies
        run: |
          sudo apt install libeigen3-dev
          python -m pip install gcovr

      - name: Install SonarSource build-wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@1a6d90ebcb0e6a6b1d87e37ba693fe453195ae25 # v5.3.1

      - name: Run build wrapper
        run: |
          cmake \
            -Bbuild \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_COMPILER=clang-16 \
            -DCMAKE_CXX_COMPILER=clang++-16 \
            -DOVERLAP_WITH_COVERAGE=ON
          build-wrapper-linux-x86-64 \
            --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
            cmake --build build --config Debug

      - name: Run tests and collect coverage information
        run: |
          cd build
          ctest --output-on-failure
          ~/.local/bin/gcovr \
            --gcov-executable 'llvm-cov-16 gcov' \
            --exclude-lines-by-pattern '.*overlap_assert.*' \
            --sonarqube coverage.xml \
            -r ../ \
            -e ../third_party/ -e ../tests/src

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@1a6d90ebcb0e6a6b1d87e37ba693fe453195ae25 # v5.3.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json
            --define sonar.coverageReportPaths=./build/coverage.xml
