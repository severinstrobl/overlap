# Copyright (C) 2025 Severin Strobl <git@severin-strobl.de>
#
# SPDX-License-Identifier: MIT
#
# Exact calculation of the overlap volume of spheres and mesh elements.
# http://dx.doi.org/10.1016/j.jcp.2016.02.003

[build-system]
build-backend = "scikit_build_core.build"
requires = [ "scikit-build-core" ]

[project]
name = "overlap"
description = "Exact calculation of the overlap volume and area of spheres and mesh elements"
readme = "README.md"
keywords = [
  "computational-geometry",
  "mesh-processing",
  "numerical-simulations",
]
license = { text = "MIT" }
authors = [ { name = "Severin Strobl", email = "git@severin-strobl.de" } ]
requires-python = ">=3.9"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
]

dynamic = [ "version" ]
dependencies = [ "numpy" ]
optional-dependencies.test = [ "pytest>=6" ]
urls.github = "https://github.com/severinstrobl/overlap"
urls.issues = "https://github.com/severinstrobl/overlap/issues"
urls.source = "https://github.com/severinstrobl/overlap.git"

[tool.setuptools_scm]
write_to = "python/overlap/_version.py"

[tool.scikit-build]
cmake.version = ">=3.18"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = [ "python/overlap/_version.py" ]

[tool.cibuildwheel]
test-requires = [ "pytest==7.4.4" ]
test-command = "python -m pytest -vs {project}/tests/python"
build-verbosity = 1
environment-pass = [ "SETUPTOOLS_SCM_OVERRIDES_FOR_OVERLAP" ]
enable = "pypy"
skip = "pp310-manylinux_i686 pp311-manylinux_i686 cp314t-* cp313-pyodide_wasm32"

[tool.cibuildwheel.linux]
archs = [ "auto64", "auto32" ]

[tool.cibuildwheel.windows]
archs = [ "auto64", "auto32" ]

[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
inherit.environment = "append"
environment.MACOSX_DEPLOYMENT_TARGET = "10.15"

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
inherit.environment = "append"
environment.MACOSX_DEPLOYMENT_TARGET = "11.0"

[[tool.cibuildwheel.overrides]]
select = "*pyodide*"
inherit.environment = "append"
environment.CFLAGS = "-fexceptions"
environment.LDFLAGS = "-fexceptions"
build-frontend = { name = "build", args = [ "--exports", "whole_archive" ] }

[tool.ruff]
line-length = 100
indent-width = 4
fix = true
output-format = "github"

format.indent-style = "space"
format.quote-style = "double"

# ref: https://docs.astral.sh/ruff/rules/
lint.select = [
  "A",   # flake8-builtins
  "ANN", # flake8-annotations
  "B",   # flake8-bugbear
  "D",   # pycodestyle
  "E",   # pycodestyle errors
  "F",   # Pyflakes
  "FBT", # flake8-boolean-trap
  "I",   # isort
  "N",   # pep8-naming
  "PL",  # Pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
]

# disable some rules for benchmarks/tests
lint.per-file-ignores."benchmarks/*" = [
  "D", # pycodestyle
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-undocumented-public-function
  "D",      # pycodestyle
]

lint.pydocstyle.convention = "google"

[tool.pytest.ini_options]
minversion = "6"
testpaths = [ "tests/python" ]
addopts = [ "-ra", "--strict-config", "--strict-markers" ]
filterwarnings = [ "error" ]
log_cli_level = "INFO"
xfail_strict = true
